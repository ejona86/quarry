<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
	  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"
	  [ <!ENTITY LEGAL       SYSTEM "legal.xml">
	    <!ENTITY AUTHORS     SYSTEM "authors.xml">
	    <!ENTITY FDL         SYSTEM "fdl.xml">
	    <!ENTITY appversion  "0.3">
	    <!ENTITY manrevision "0.3">
	    <!ENTITY date        "June 2011">
	    <!ENTITY app         "<application>Quarry</application>">
	    <!ENTITY copy        "&#169;"> ]>
<!--
      (Do not remove this comment block.)
  Maintained by the GNOME Documentation Project
  http://developer.gnome.org/projects/gdp
  Template version: 2.0 beta
  Template last modified Apr 11, 2002
-->

<!-- Since Quarry is not a GNOME project, I modified this template somewhat.  /pp -->

<!-- Document Header -->

<!-- Please do not change the `id'; for translations, change `lang' to appropriate
     code. -->
<book id="index" lang="en">
  <bookinfo>
    <title>&app; Manual</title>
    <copyright>
      <year>2004</year>
      <year>2005</year>
      <year>2006</year>
      <holder>Paul Pogonyshev</holder>
    </copyright>
    <copyright>
      <year>2011</year>
      <holder>Ethan Baldridge</holder>
    </copyright>

    <!-- TRANSLATORS: Uncomment this:

    <copyright>
      <year>2006</year>
      <holder>ME-THE-TRANSLATOR (Latin translation)</holder>
    </copyright>

    -->

    <!-- An address can be added to the publisher information.  If a role is not
	 specified, the publisher/author is the same for all versions of the document.

	 Seems not particularly true for Quarry, commented out.
      -->
    <!--
    <publisher>
      <publishername> GNOME Documentation Project </publishername>
    </publisher>
    -->

    &LEGAL;

    <authorgroup>
      <author>
	<firstname>Paul</firstname>
	<surname>Pogonyshev</surname>
	<affiliation>
	  <address><email>pogonyshev@gmx.net</email></address>
	</affiliation>
      </author>
      <author>
	<firstname>Ethan</firstname>
	<surname>Baldridge</surname>
	<affiliation>
	  <address><email>baldridge.ethan@gmail.com</email></address>
	</affiliation>
      </author>

<!-- This is appropriate place for other contributors: translators, maintainers,
     etc. Commented out by default.

      <othercredit role="translator">
	<firstname>Latin</firstname>
	<surname>Translator 1</surname>
	<affiliation>
	  <orgname>Latin Translation Team</orgname>
	  <address><email>translator@gnome.org</email></address>
	</affiliation>
	<contrib>Latin translation</contrib>
      </othercredit>
-->
    </authorgroup>

    <revhistory>
      <revision>
	<revnumber>Quarry Manual V&manrevision;</revnumber>
	<date>&date;</date>
	<revdescription>
	  <para role="author">Ethan Balridge
	    <email>baldridge.ethan@gmail.com</email>
	  </para>
	</revdescription>
      </revision>
    </revhistory>

    <releaseinfo>
      This manual describes version &appversion; of Quarry.
    </releaseinfo>
    <legalnotice>
      <title>Feedback</title>
      <para>
	To report a bug or make a suggestion regarding the &app; application or this
	manual, either send a message to <email>quarry-dev@gna.org</email> or use
	<ulink url="https://gna.org/bugs/?group=quarry">&app; bug tracker</ulink>.
      </para>
      <!-- Translators may also add here feedback address for translations. -->
    </legalnotice>

    <indexterm zone="index">
      <primary>Quarry</primary>
    </indexterm>
    <indexterm zone="index">
      <primary>quarry</primary>
    </indexterm>
  </bookinfo>

  <!-- Document Body -->

  <!-- Introduction -->
  <preface id="introduction">
    <title>Introduction</title>
    <para>
      The &app; application allows you to play the board games of Go, Amazons and Reversi.
      You can play with computer programs or with another human, and save, view and edit
      game records.
    </para>

    <para>
      &app; provides the following features:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  Support for Go, Amazons and Reversi games.
	</para>
      </listitem>

      <listitem>
	<para>
	  Nice resizable <link linkend="board-windows">board</link>.
	</para>
      </listitem>

      <listitem>
	<para>
	  Playing games:

	  <itemizedlist>
	    <listitem>
	      <para>
		<ulink type="http" url="http://www.gnugo.org/gnugo.html"><application>GNU
		    Go</application></ulink>,
		<ulink type="http"
		       url="http://rhino.sourceforge.net/"><application>GRhino</application></ulink>
		or any other
		<ulink type="http"
		       url="http://www.lysator.liu.se/~gunnar/gtp/">GTP</ulink>
		(Game Text Protocol) engine can be your opponent.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Computer vs. computer and human vs. human games are an option too.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Good support for <link linkend="new-game-dialog-time-settings">time
		  control</link>.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Games can be <link linkend="adjourn-game">adjourned</link> and
		later <link linkend="resume-game">resumed</link>.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>

      <listitem>
	<para>
	  Game records:

	  <itemizedlist>
	    <listitem>
	      <para>
		All games can be stored in widely supported
		<ulink type="http" url="http://www.red-bean.com/sgf/">SGF</ulink> FF[4]
		file format.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Fast and robust parser can read SGF files of any version.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		In particular,
		<ulink type="http" url="http://waterfire.us/joseki.htm">Kogo’s Joseki
		  Dictionary</ulink> can be browsed with &app;.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		<link linkend="game-tree-view">Game Tree View</link> allows for easy
		navigation of game records.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		<link linkend="find-dialog">Text search in comments</link> is a powerful
		tool if you know what to search for.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Go board position can be exported in a format suitable for inserting into
		<ulink type="http" url="http://senseis.xmp.net/">Sensei’s Library</ulink>.
	      </para>
	    </listitem>

	    <listitem>
	      <para>
		Support for various SGF labels and markup.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>
    </itemizedlist>

    <note>
      <para>
	&app; itself can play neither Go, nor Amazons, nor Reversi.  To have a computer
	opponent, you need to find a program (e.g. <application>GNU Go</application>
	mentioned above) that supports GTP and
	<link linkend="register-game-playing-program">register it in &app;</link>.
      </para>
    </note>

    <note>
      <para>
	&app; does not have any support for Internet game servers and it will not be added
	before versions 0.3.x.
      </para>
    </note>
  </preface>

  <!-- Getting Started -->
  <chapter id="getting-started">
    <title>Getting Started</title>

    <section id="start">
      <title>To Start &app;</title>
      <para>
	You can start &app; from your Applications menu, it should typically be available
	under
	<menuchoice>
	  <guimenu>Games</guimenu>
	  <guisubmenu>Board Games</guisubmenu>
	</menuchoice>.

	However, this may depend on the exact way you installed the program and your
	operating system.
      </para>

      <para>
	&app; can also be started from the command line.  Simply
	type <command>quarry</command> in and press <keycap>Return</keycap>.
      </para>

      <para>
	You can also have &app; open one or more game records immediatly after you start
	it.  Just type
      </para>

      <para>
	<command>quarry</command> <replaceable>file1.sgf file2.sgf ...</replaceable>
      </para>

      <para>
	in the command line and press <keycap>Return</keycap>.  &app; will start with
	specified file(s) open.
      </para>

      <note>
	<para>
	  Filenames don’t have to end in <filename>.sgf</filename>, but names of SGF files
	  typically do have this suffix.
	</para>
      </note>
    </section>

    <section id="when-start">
      <title>When You Start &app;</title>
      <para>
	When you start &app;, Control Center window is displayed:
      </para>

      <figure id="control-center-screen-shot">
	<title>&app; Control Center</title>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="figures/control-center.png"
			 format="PNG"/>
	    </imageobject>
	    <textobject>
	      <phrase>
		Shows &app; Control Center window.
	      </phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
      </figure>

      <para>
	The Control Center window consists of the following elements:
      </para>

      <variablelist>
	<varlistentry>
	  <term><guibutton>New Game</guibutton> button</term>
	  <listitem>
	    <para>
	      This button allows you to start a new game.  It will pop up the
	      <link linkend="new-game-dialog">New Game dialog</link> where you can select
	      the game (Go, Amazons or Reversi), opponents and game-specific rules.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>New Game Record</guibutton> button</term>
	  <listitem>
	    <para>
	      Clicking this buttons allows you to create a game record without actually
	      playing a game.  <link linkend="new-game-record-dialog">New Game Record
	      dialog</link> will be shown, asking you for basic game record parameters.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Open Game Record</guibutton> button</term>
	  <listitem>
	    <para>
	      This button allows you to select a game record for viewing and/or editing.
	      You will need to pick the file with the game record in the standard Open
	      File dialog.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Resume Game</guibutton> button</term>
	  <listitem>
	    <para>
	      Click this button to resume a game you
	      <link linkend="adjourn-game">adjourned</link> earlier.  Actually, you can
	      resume about any unfinished game, even one you started in a different
	      client.  A standart Open File dialog will be popped up for you to select the
	      file containing the game record you wish to resume.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Preferences</guibutton> button</term>
	  <listitem>
	    <para>
	      This button opens the &app;
	      <link linkend="preferences">Preferences dialog</link>.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Quit</guibutton> button</term>
	  <listitem>
	    <para>
	      Closes all windows and quits the program.  However, if there are unsaved
	      changes in any of the open game records, you will be asked what to do with
	      them first.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </chapter>

  <chapter id="usage">
    <title>Usage</title>

    <section id="new-game">
      <title>To Start a New Game</title>
      <para>
	To start a new game, click the <guibutton>New Game</guibutton> button in the
	<link linkend="when-start">&app; Control Center window</link> or choose
	<menuchoice>
	  <guimenu>File</guimenu>
	  <guimenuitem>New Game…</guimenuitem>
	</menuchoice>
	menu item in any of the already open <link linkend="board-windows">Board
	Windows</link>.  The <link linkend="new-game-dialog">New Game dialog</link> will
	appear, where you can choose the kind of game you want and the opponents.
      </para>

      <para>
	If you want to play against a computer program, you need to
	<link linkend="register-game-playing-program">register it</link> in &app; first
	(once only, of course.)  To do this, click the
	<guibutton>Manage Engine List</guibutton> button in the dialog.
      </para>

      <para>
	For more information, see the
	<link linkend="new-game-dialog">detailed description of New Game
	  dialog</link>.
      </para>
    </section>

    <section id="open-game-record">
      <title>To Open a Game Record</title>
      <para>
	You can open a game record in one of three ways:
      </para>

      <itemizedlist>
	<listitem>
	  <para>
	    Click the <guibutton>Open Game Record</guibutton> button in the
	    <link linkend="when-start">Control Center window</link>.  &app; will display
	    the <guilabel>Open SGF File</guilabel> dialog.  Select the file with the game
	    record you want to open and click the <guibutton>OK</guibutton>.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Choose
	    <menuchoice>
	      <guimenu>File</guimenu>
	      <guimenuitem>Open</guimenuitem>
	    </menuchoice>
	    menu item or simply press <keycap>Ctrl+O</keycap> in any opened
	    <link linkend="board-windows">Board window</link>.  Similarly to the previous
	    case, &app; will display the <guilabel>Open SGF File</guilabel> dialog.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    When starting &app; from the command line, specify the name of file (or
	    several names at once):
	  </para>

	  <para>
	    <command>quarry</command> <replaceable>file1.sgf file2.sgf ...</replaceable>
	  </para>

	  <para>
	    The specified file(s) will be opened automatically.
	  </para>
	</listitem>
      </itemizedlist>
    </section>

    <section id="save-game-record">
      <title>To Save a Game Record</title>
      <para>
	To save a game record, choose
	<menuchoice>
	  <guimenu>File</guimenu>
	  <guimenuitem>Save</guimenuitem>
	</menuchoice>
	menu item in its <link linkend="board-windows">Board window</link> (or simply
	press <keycap>Ctrl+S</keycap>.)  If the game record does not yet have a filename,
	&app; will display the <guilabel>Save As</guilabel> dialog.  Enter the name for
	the file, then click the <guibutton>OK</guibutton>.
      </para>

      <para>
	If you want to save a game record under a different filename, choose
	<menuchoice>
	  <guimenu>File</guimenu>
	  <guimenuitem>Save As</guimenuitem>
	</menuchoice>
	menu item.  Enter a name for the file in the <guilabel>Save As</guilabel> dialog
	and click <guibutton>OK</guibutton>.
      </para>
    </section>

    <section id="register-game-playing-program">
      <title>To Register a Game-Playing Program</title>
      <para>
	To register a game-playing program in &app;, first open the
	<link linkend="preferences">Preferences dialog</link> and select
	<guilabel>GTP Engines</guilabel> category in its left pane.  (You can also click
	the <guibutton>Manage Engine List</guibutton> button in the
	<link linkend="new-game-dialog">New Game dialog</link>, which immediatly displays
	the <guilabel>GTP Engines</guilabel> category.)
      </para>

      <para>
	Then click the <guibutton>Add</guibutton> button and, in the
	<link linkend="preferences-gtp-engine-information-dialog">appeared dialog</link>,
	enter the command line required to launch the program in GTP mode.  You should
	consult the program’s manual to find out how the command line should look like.
	For instance, command line for
	<ulink type="http" url="http://www.gnugo.org/gnugo.html"><application>GNU
	Go</application></ulink> should be like this (note the double hyphens):
      </para>

      <para>
	<command>gnugo --mode gtp --quiet</command>
      </para>

      <para>
	Other programs may require different options or no options at all.
      </para>
    </section>

    <section id="adjourn-game">
      <title>To Adjourn a Game</title>
      <para>
	To adjourn a game, choose
	<menuchoice>
	  <guimenu>Play</guimenu>
	  <guimenuitem>Adjourn Game</guimenuitem>
	</menuchoice>
	menu item.  If the game has never been saved yet, you will need to enter the name
	of the file you would like to store it in.
      </para>

      <para>
	Actually, adjourning differs from saving only in that it closes
	the <link linkend="board-windows">game’s window</link>.
      </para>
    </section>

    <section id="resume-game">
      <title>To Resume a Game</title>
      <para>
	To resume a previously adjourned game, click <guibutton>Resume Game</guibutton>
	button in the <link linkend="when-start">&app; Control Center window</link> or
	select <guimenuitem>Resume Game…</guimenuitem> item from
	the <guimenu>File</guimenu> menu.  You will be prompted for the file that contains
	the game record.
      </para>

      <para>
	When you select the file, <link linkend="resuming-game-dialog">Resuming Game
	Dialog</link> pops up, where you should specify the players.  &app; will try to
	guess the opponents based on the data stored in the game record, but it can make a
	mistake in determining whether there are any computer players and which engines
	should play.  You will always have the final say, though, and will be able to
	correct any mistakes.
      </para>

      <para>
	If the game you select is already finished, you will be prompted to open it for
	viewing and/or editing instead of resuming.
      </para>
    </section>
  </chapter>

  <chapter id="windows-and-menus">
    <title>Quarry Windows and Menus</title>

    <section id="new-game-dialog">
      <title>New Game Dialog</title>
      <para>
	The New Game dialog consists of two pages, <guilabel>Game &amp; Players</guilabel>
	and <guilabel>Game Rules</guilabel>.  When you open the dialog, the first page
	appears.  When you click <guibutton>Next</guibutton> button, the second page is
	displayed, which is specific for each of three games—Go, Amazons and Reversi.
      </para>

      <section id="new-game-dialog-game-and-players">
	<title>Game &amp; Players Page</title>
	<para>
	  On this page you can select one of three available games and the opponents.  You
	  can make selections in arbitrary order—first choose the game and then the
	  opponents or the other way round.  At any time, all playable combinations of
	  games and computer players are marked with <quote>Yes</quote> icons, while all
	  unplayable combinations are marked with <quote>No</quote> icons.
	  The <guibutton>Next</guibutton> button is sensitive only when a playable
	  combination of game and opponents is selected.
	</para>

	<note>
	  <para>
	    Before playing against a computer program (e.g.
	    <ulink type="http" url="http://www.gnugo.org/gnugo.html"><application>GNU
	    Go</application></ulink>, you need to register it in &app;.  See
	    <link linkend="preferences-gtp-engines">GTP Engines</link> section for how to
	    do this.
	  </para>
	</note>

	<para>
	  <guilabel>Game &amp; Players</guilabel> page conists of the following controls:
	</para>

	<variablelist>
	  <varlistentry>
	    <term><guilabel>Game</guilabel> section</term>
	    <listitem>
	      <para>
		Here you can select the game you want to play, either Go, Amazons or
		Reversi (also known as Othello).  Note that most programs can play only
		one game.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term><guilabel>White Player</guilabel> and <guilabel>Black Player</guilabel>
	      sections</term>
	    <listitem>
	      <para>
		This set of controls determines the opponents.  Each opponent can be
		either a human or a computer program.  For a human player you can specify
		her name (defaults to your name as reported by the system.)  Computer
		opponent should be selected from the drop-down list.  If the list does not
		contain the program you want to play against, click the
		<guibutton>Manage Engine List</guibutton> at the end of the dialog to
		register the program in &app;.
	      </para>

	      <para>
		Which player is to move first depends on the game.  In Go and Reversi
		black moves first, while in Amazons white has the first turn.  You can
		always change sides with the <guibutton>Swap</guibutton> button to the
		right.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term><guibutton>Swap</guibutton> button</term>
	    <listitem>
	      <para>
		This button allows you to easily swap players’ sides.  It does nothing
		else but copying settings from <guilabel>White Player</guilabel> section
		to <guilabel>Black Player</guilabel> section and vice versa.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term><guibutton>Manage Engine List</guibutton> button</term>
	    <listitem>
	      <para>
		This button opens &app; Preferences dialog at the
		<link linkend="preferences-gtp-engines">GTP Engines</link> page.  A
		convenient way to register new program and/or modify parameters of the
		already registered ones just before starting a new game.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term><guibutton>Next</guibutton> button</term>
	    <listitem>
	      <para>
		When you are done with this page, click the <guibutton>Next</guibutton>
		button to tweak game specific rules on the next page.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </section>

      <section id="new-game-dialog-game-rules">
	<title>Game Rules Page</title>
	<para>
	  On this page you can select the rules for the game.  The page has two parts.
	  The upper part is different for each of Go, Amazons and Reversi games and
	  contains game-specific rules.  The lower part contains time limit settings
	  controls and is the same for all three games.  It is
	  <link linkend="new-game-dialog-time-settings">described</link> last.
	</para>

	<para>
	  When you have selected the rules you want, click the <guibutton>Play</guibutton>
	  button to start the game.
	</para>

	<section id="new-game-dialog-go-rules">
	  <title>Go Rules</title>
	  <para>
	    Go has many different rule sets that differ in scoring details, treating of
	    some special positions etc.  Currently, &app; doesn’t make any difference
	    between them.  However, existing rule controls should be enough in most cases.
	  </para>

	  <variablelist>
	    <varlistentry>
	      <term><guilabel>Board Size</guilabel> spin button</term>
	      <listitem>
		<para>
		  Choose the size of board for the game here.  Go is traditionally played
		  on a 19×19 board.  9×9 and 13×13 boards are also common.  &app; doesn’t
		  limit you to these—choose any size between 5×5 and 25×25 inclusive.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Traditional board size buttons</term>
	      <listitem>
		<para>
		  These buttons allows you to quickly select one of
		  three <quote>traditional</quote> Go board sizes—either 9×9, 13×13 or
		  19×19.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Handicap controls</term>
	      <listitem>
		<para>
		  When one of the players is weaker, it is common practice in Go to give
		  him <firstterm>handicap</firstterm> stones.  This gives her better
		  chances to win and makes the game more challenging (and thus more
		  interesting) for the stronger player.  The weaker player is
		  traditionally playing as black.
		</para>

		<para>
		  &app; supports both <firstterm>fixed</firstterm> (also known as
		  Japanese) and <firstterm>free</firstterm> (Chinese) handicaps.  In the
		  first case, handicap stones are placed following a traditional pattern,
		  at <firstterm>hoshi</firstterm> points.  Maximal fixed handicap is 9
		  stones.  With free handicap, on the other hand, black player actively
		  places the handicap stones at any intersections on the board.  Free
		  handicap is practically not limited.
		</para>

		<note>
		  <para>
		    &app; treats free handicap as non-obligatory: it allows black to place
		    fewer handicap stones than specified in game rules (but not less than
		    two.)
		  </para>
		</note>

		<para>
		  If you want an <quote>even</quote> game, simply set the handicap to
		  zero.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><guilabel>Komi</guilabel> spin button</term>
	      <listitem>
		<para>
		  <firstterm>Komi</firstterm> is the compensation to the white player for
		  playing second.  It is usually non-integer to make draws impossible.
		  The currently suggested komi for <quote>even</quote> game on 19×19 board
		  is 6.5 points.  Smaller (or even negative) komi gives some advantage to
		  black player and can be used in addition to or instead of handicap.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>

	  <para>
	    See also
	    <link linkend="new-game-dialog-time-settings">time limit settings
	      description</link>.
	  </para>
	</section>

	<section id="new-game-dialog-amazons-rules">
	  <title>Amazons Rules</title>
	  <para>
	    At present, Amazons rules in &app; are limited to board size and common
	    <link linkend="new-game-dialog-time-settings">time limit settings</link>.
	    Standard board size for Amazons is 10×10 (which is also selectable with the
	    small button to the right), but you can choose anything from 5×5 to 25×25
	    inclusive.
	  </para>
	</section>

	<section id="new-game-dialog-reversi-rules">
	  <title>Reversi Rules</title>
	  <para>
	    Reversi rules in &app; are limited to board size and
	    <link linkend="new-game-dialog-time-settings">time limit settings</link>
	    described just below this section.  Standard board size for Reversi is 8×8,
	    though 10×10 boards are not uncommon either.  This is reflected by the choice
	    of <quote>traditional</quote> board sizes with the buttons to the right.
	    However, in &app; you can select any even board size from 6×6 to 24×24
	    inclusive.
	  </para>
	</section>

	<section id="new-game-dialog-time-settings">
	  <title>Time Limit Settings</title>
	  <para>
	    &app; allows to play games with limited time for both players.  This also
	    applies to computer program players—they have to honor the alloted time
	    or lose.  Of course the programs are properly notified about the time limit
	    settings and the remaining time.
	  </para>

	  <note>
	    <para>
	      Computer opponents use CPU time to generate moves.  This means that they
	      usually need less time on faster machines and more on slower machines.
	      Also, if you run a computationally intensive task while playing, your
	      computer opponents may become slower.  Finally, certain computer programs
	      may also
	      <quote>think</quote> on opponent’s time.
	    </para>
	  </note>

	  <para>
	    &app; has four types of time control:
	  </para>

	  <variablelist>
	    <varlistentry>
	      <term>No limit</term>
	      <listitem>
		<para>
		  Both opponents can take as much time as they like on each move, there
		  are no limits.  In this mode you can select the
		  <guilabel>Keep track of total time</guilabel> option.  Then &app; will
		  display the total time spent on move pondering by each player.  This is
		  purely for your information and serves no other purpose.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Limited time for entire game</term>
	      <listitem>
		<para>
		  Each player has limited time to play the whole game.  If a player fails
		  to finish the game in the alloted time, she loses.  Note that time limit
		  doesn’t depend on the number of moves in the game.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Limited time per move</term>
	      <listitem>
		<para>
		  Each move has to be played in fixed time.  Time not used is not stored
		  and not added to available time on next moves.  When using this mode,
		  keep in mind that in most games there are <quote>difficult</quote>
		  positions that require more pondering time.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="canadian-overtime">
	      <term>Canadian overtime (also known as Canadian byo-yomi)</term>
	      <listitem>
		<para>
		  This time control is often used in Go, but has nothing Go-specific, so
		  it can be used in any other move-based game.  Canadian overtime has the
		  advantage of imposing certain speed of play, but, at the same time,
		  allowing to occasionally spend more time on important moves.
		</para>

		<para>
		  Canadian overtime has three parameters:
		  <firstterm>main time</firstterm>,
		  <firstterm>overtime period length</firstterm> and
		  <firstterm>moves per overtime</firstterm>.  Both players begin game in
		  their main time.  During main time they can play any number of moves at
		  any speed.  When main time for a player is up, first overtime period
		  begins.  During each overtime period a player has to play the specified
		  number of moves (<firstterm>moves per overtime</firstterm>.)  If she
		  fails to do so, she loses on time.  Otherwise, next overtime (of the
		  very same length) begins and the player has to play the same number of
		  moves this before the time is up again.  The number of overtimes is
		  unlimited and they are completely equal to each other: time not used in
		  one overtime period is not stored and not added to other overtime
		  periods.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</section>
      </section>
    </section>

    <section id="new-game-record-dialog">
      <title>New Game Record Dialog</title>
      <para>
	The New Game Record dialog allows you to start a new game record without actually
	playing a game.  When you are done entering game record information, press
	the <guibutton>Create</guibutton> button.  Or press
	the <guibutton>Cancel</guibutton> button to cancel game record creation.
      </para>

      <para>
	The dialog consists of the following controls besides the mentioned buttons:
      </para>

      <variablelist>
	<varlistentry>
	  <term>Game selectors</term>
	  <listitem>
	    <para>
	      Here you choose the game you want to create a record of—Go, Amazons or
	      Reversi.  All the games supported by &app; are listed.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Rules section</term>
	  <listitem>
	    <para>
	      This section contains various controls for basic game rules.  They are
	      described in more details in the <link linkend="new-game-dialog">New Game
	      dialog section</link>.
	    </para>

	    <para>
	      One important change is the <guibutton>Place stones</guibutton> check button
	      to the right of handicap spin button.  It determines whether &app; should
	      place the handicap stones for you, or not.  Stones are placed as if the
	      handicap is fixed, but you can always change stones setup later if needed.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Short Game Information</guilabel></term>
	  <listitem>
	    <para>
	      Here you can enter the names of white and black player and the name of the
	      game.  You can change or expand this information later, using the
	      <link linkend="game-information-dialog">Game Information dialog </link>.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>

    <section id="resuming-game-dialog">
      <title>Resuming Game Dialog</title>
      <para>
	The Resuming Game Dialog allows you to specify or correct game players when
	resuming a game.  It also shows some information about the game, most of which is
	not editable.
      </para>

      <para>
	You can specify both game players and fix their names, if needed.  There are two
	radio buttons and a combo box for each player.  Radio buttons control whether a
	player is a human or a computer (some GTP engine.)  If you select to let computer
	control a player, you can choose any available GTP engine from the list for it.
      </para>

      <para>
	&app; tries to guess players based on their names, as stored in the game record.
	Normally, if the game was adjourned in &app; and you don’t alter computer player
	names, it should guess correctly.  However, you can always override and correct
	its decision.
      </para>
    </section>

    <section id="board-windows">
      <title>Board Windows</title>
      <para>
	Board windows are the main part of &app;.  They are used to play games and view
	and edit game records.  To the left in a window is the game board itself.  The
	exact appearance of the board depends on the current game (Go, Amazons or Reversi)
	and can be <link linkend="preferences-go-board-appearance">configured</link>.  On
	the right side of the window there is information pane, including the comment
	window.  There can also be the <link linkend="game-tree-view">game tree
	view</link> to the bottom of the right pane.
      </para>

      <figure id="board-window-screen-shot">
	<title>&app; Board Window showing Kogo’s Joseki Dictionary</title>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="figures/board-window.png"
			 format="PNG"/>
	    </imageobject>
	    <textobject>
	      <phrase>
		Shows &app; Board Window with Kogo’s Joseki Dictionary.
	      </phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
      </figure>

      <section id="board">
	<title>The Board</title>
	<para>
	  Board displays current game position, including pieces, markup, labels and
	  variations of the current node.  Coordinate labels are shown on the edges of the
	  board.  They depend on the current game.  In the top-left corner a small
	  rectangle is drawn if the board has focus.
	</para>

	<para>
	  The last move made is marked.  Depending on the markup theme, this can be a
	  cross or a bullet.  On the screen shot above, last placed stone at P15 is marked
	  with a cross.
	</para>

	<note>
	  <para>
	    This section can be improved. <!-- FIXME -->
	  </para>
	</note>

	<section id="variations">
	  <title>Variations</title>
	  <para>
	    &app; treats variations as siblings of the current node.  This is like Jago
	    does and unlike CGoban.  You always see the current variation and it is not a
	    potential for the next node/move.
	  </para>

	  <para>
	    On the board, non-current variations that contain a move are shown as small
	    ghostly pieces.  Variations that don’t contain a move or contain a pass move
	    (in Go) can be seen only in the <link linkend="game-tree-view">Game Tree
	    View</link>.  Screen shot above shows two variations—at Q18 and Q19—of the
	    white move on the board.
	  </para>

	  <para>
	    You can activate (switch to) a particular variation by right-clicking on the
	    ghost stone on the board.  For instance, right-clicking on Q18 in the window
	    shown in the screen shot would make White Q18 the current move.  In rare cases
	    when there are multiple variations with the same move, right-clicking and
	    shift-right-clicking scrolls through the list of such variations.  Alternative
	    ways of switching to different variations include using the Game Tree View and
	    using menu items, toolbar buttons or
	    <link linkend="board-keyboard-navigation">keyboard shortcuts</link>.
	  </para>
	</section>

	<section id="board-keyboard-navigation">
	  <title>Keyboard Navigation</title>
	  <para>
	    Board has several keyboard shortcuts to ease game record navigation.
	    Remember, that these shortcuts are active only if the board has focus, as
	    indicated with a small rectangle in the top-left corner.  Otherwise, you
	    should type them with <keycap>Alt</keycap> modifier: more complicated
	    shortcuts work everywhere in Board Windows.

	    <table frame="none">
	      <title>Board keyboard shortcuts</title>
	      <tgroup cols="2">
		<thead>
		  <row>
		    <entry>Shortcut</entry>
		    <entry>Action</entry>
		  </row>
		</thead>

		<tbody>
		  <row>
		    <entry><keycap>Left arrow</keycap></entry>
		    <entry>
		      Go to the previous node (current node’s parent.)
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Right arrow</keycap></entry>
		    <entry>
		      Go to the next node (current node’s child.)  By default, next node
		      is the first child, but it is remembered if you switch to a
		      different child.
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Page Up</keycap></entry>
		    <entry>
		      Go ten nodes backward.  If there are less than ten nodes, stop at
		      the root of the game tree.
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Page Down</keycap></entry>
		    <entry>
		      Go ten nodes forward.  If there are less than ten nodes, stop at the
		      branch end.
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Home</keycap></entry>
		    <entry>
		      Go to the game tree root.
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>End</keycap></entry>
		    <entry>
		      Go to the last node in the current branch (variation.)
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Up arrow</keycap></entry>
		    <entry>
		      Go to the previous variation of the current node.  I.e. go to the
		      previous child of the parent of the current node.
		    </entry>
		  </row>

		  <row>
		    <entry><keycap>Down arrow</keycap></entry>
		    <entry>
		      Go to the next variation of the current node.  I.e. go to the next
		      child of the parent of the current node.
		    </entry>
		  </row>
		</tbody>
	      </tgroup>
	    </table>
	  </para>
	</section>
      </section>

      <section id="board-window-information-pane">
	<title>Board Window Information Pane</title>
	<para>
	  Game Information Pane shows information about the game in general, about the
	  last move made and about the current node.  Some of its components are optional
	  and can be hidden in the <guimenu>View</guimenu> menu.
	</para>

	<para>
	  <variablelist>
	    <varlistentry>
	      <term>Player Information</term>
	      <listitem>
		<para>
		  At the top of the pane is the player information for both players.  It
		  shows player name, team and rank (first line), plus game-specific
		  information (second line.)  If name is missing,
		  string <quote>[unknown]</quote> is shown in its place.  If team or rank
		  is not specified, they are simply not shown.
		</para>

		<para>
		  Game-specific information includes number of captures made by a player
		  plus white player’s komi for Go; and number of disks on the board for
		  Reversi.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Player Clocks</term>
	      <listitem>
		<para>
		  Close to player information are the clocks.  When a game is played, they
		  display the time left for a player.  Additionally, they can display
		  number of pieces left in the current
		  <link linkend="canadian-overtime">Canadian overtime</link> period in
		  smaller digits to the right.  When a game record is viewed, clocks
		  display time left <emphasis>after</emphasis> move in the current node
		  has been played.  Clocks can be empty if a game is played without time
		  limits.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Move Information</term>
	      <listitem>
		<para>
		  Below player information and clocks a single line displays move
		  information.  It shows last move (usually, current node’s move) number
		  and the move itself.  Afterwards, player to move is specified.  This can
		  sometimes seemingly contradict with the last move, but it is allowed to
		  override player to move in game records (see
		  <menuchoice>
		    <guimenu>Edit</guimenu>
		    <guisubmenu>Player to Move</guisubmenu>
		  </menuchoice>
		  submenu.)  This feature is often used in problem collections.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Game Result</term>
	      <listitem>
		<para>
		  Below move information game result is shown, but only at the very last
		  node of the game.  This is done in order to prevent spoiling of watching
		  of unknown games.  Also, if the game lacks any result or is unfinished
		  there is nothing to show at all.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Game Action Buttons</term>
	      <listitem>
		<para>
		  Yet below there are game action buttons.  These
		  include <guibutton>Pass</guibutton> (for Go) and
		  <guibutton>Resign</guibutton>.  Because functionality of this buttons is
		  quite rarely used and they take up space, you can hide them using
		  <menuchoice>
		    <guimenu>View</guimenu>
		    <guimenuitem>Game Action Buttons</guimenuitem>
		  </menuchoice> menu item.  They are shown by default mainly as a reminder
		  of the options you have.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Comment Window</term>
	      <listitem>
		<para>
		  Most of the right side is taken by comment window.  It displays any
		  commentary the current node has.  Comment can be edited and you don’t
		  need to take any actions to save your edits.  Edits are also saved in
		  the undo history and can be undone and redone freely.
		</para>

		<para>
		  If the current node has a name, it is shown above comment in bold
		  underlined font.  It can be edited just like comment and you don’t need
		  any special steps to edit node name.  However, to create a name for a
		  node that lacks one, use
		  <menuchoice>
		    <guimenu>Edit</guimenu>
		    <guimenuitem>Edit Node Name</guimenuitem>
		  </menuchoice> menu item.  It will insert a placeholder for node name in
		  the window, which you can then replace with actual name.  To delete a
		  name, simply delete all its text.  &app; will notice it and remove node
		  line from the window.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Game Tree View</term>
	      <listitem>
		<para>
		  Finally, there can be the Game Tree View, described in detail in the
		  <link linkend="game-tree-view">next section</link>.  Its visibility is
		  controlled by
		  <menuchoice>
		    <guimenu>View</guimenu>
		    <guimenuitem>Game Tree</guimenuitem>
		  </menuchoice> menu item and
		  <link linkend="preferences-game-tree">preferences</link>.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>
      </section>

      <section id="game-tree-view">
	<title>Game Tree View</title>
	<para>
	  Game Tree View shows game record as a tree in a style used
	  by <application>CGoban1</application>.  Generally, it is of interest only if the
	  game record contains variations.  For instance, a debut/joseki dictionary or a
	  well-annotated game with alternate branches.  Visibility of Game Tree View is
	  controlled with <guimenuitem>Game Tree</guimenuitem> item in
	  <guimenu>View</guimenu> menu and with
	  <link linkend="preferences-game-tree">preferences</link>.
	</para>

	<para>
	  Node with a move of a specific player, including pass move in Go, are shown as
	  pieces of player’s color.  Other nodes, including position setup, at present
	  lack any icon.  Nodes that belong to a same branch (variation) are connected
	  with a line and the current branch is highlighted.  Current node is shown within
	  a black rectangle.  If it is not visible, you can bring it onscreen using
	  <guimenuitem>Recenter on Current Node</guimenuitem> command from the
	  <guimenu>View</guimenu> menu.
	</para>

	<para>
	  Subtrees can be collapsed/expanded by right-clicking on subtree root.  This is
	  useful to hide nodes you are not interested in currently.  Roots of collapsed
	  nodes have a cross on them.
	</para>

	<para>
	  If a mouse is held over a node, a tooltip with information about the node is
	  shown.  It includes move number, move itself, node name and comment.  Of course,
	  some of these can be absent from the tooltip, if they are not present in the
	  node to begin with.  If node comment is too long, only first part of it is
	  shown.  Tooltips can be disabled in
	  <link linkend="preferences-game-tree">preferences</link> if they look too
	  distracting to you.
	</para>
      </section>

      <section id="board-window-menu">
	<title>Board Window Menu</title>

	<section id="file-menu">
	  <title><guimenu>File</guimenu> menu</title>
	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>New Game…</guimenuitem></term>
		<listitem>
		  <para>
		    Show <link linkend="new-game-dialog">New Game Dialog</link> to start a
		    new game.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>New Game Record…</guimenuitem></term>
		<listitem>
		  <para>
		    Show <link linkend="new-game-record-dialog">New Game Record
		      Dialog</link> to create a new game record without actually playing a
		    game.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Open…</guimenuitem></term>
		<listitem>
		  <para>
		    Open a game record.  Record may as well have been saved in a different
		    application.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Resume Game…</guimenuitem></term>
		<listitem>
		  <para>
		    Open a game record and show
		    <link linkend="resuming-game-dialog">Resume Game Dialog</link> to
		    resume the game.  Games adjourned in different applications can be
		    resumed too.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guisubmenu>Export…</guisubmenu></term>
		<listitem>
		  <para>
		    <variablelist>
		      <varlistentry>
			<term><guimenuitem>ASCII Diagram</guimenuitem></term>
			<listitem>
			  <para>
			    Export current board position as a free-format ASCII diagram
			    to the clipboard.  Useful e.g. to mail game position if you
			    don’t need a full-blown SGF.  Only board position without any
			    markup is stored.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Sensei’s Library Diagram</guimenuitem></term>
			<listitem>
			  <para>
			    Export current board position as a Sensei’s Library diagram to
			    the clipboard.  Pieces, circle and square markup and labels
			    are exported.  Result, of course, can be imported into the
			    Sensei’s Library.  Only available for Go games.
			  </para>

			  <note>
			    <para>
			      It is currenly impossible to export only part of the board.
			      You need to manually delete unneeded information in such
			      cases.
			    </para>
			  </note>
			</listitem>
		      </varlistentry>
		    </variablelist>
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Save</guimenuitem></term>
		<listitem>
		  <para>
		    Save the game record under its filename.  If the game record is new,
		    ask for filename first.  This command is disabled if the game record
		    is not modified.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Save as…</guimenuitem></term>
		<listitem>
		  <para>
		    Save the game record under a different filename.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Close</guimenuitem></term>
		<listitem>
		  <para>
		    Close the board window.  If the game record is modified, ask whether
		    to save it first.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Quit</guimenuitem></term>
		<listitem>
		  <para>
		    Quit &app;.  Prompts to save any unsaved game records first.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>

	<section id="edit-menu">
	  <title><guimenu>Edit</guimenu> menu</title>
	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>Undo</guimenuitem></term>
		<listitem>
		  <para>
		    Undo the last change made in the current game record.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Redo</guimenuitem></term>
		<listitem>
		  <para>
		    Redo the last undone change made in the current game record.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Cut</guimenuitem></term>
		<listitem>
		  <para>
		    Cut subtree having the current node as its root into clipboard.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Copy</guimenuitem></term>
		<listitem>
		  <para>
		    Copy subtree having the current node as its root into clipboard.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Paste</guimenuitem></term>
		<listitem>
		  <para>
		    Paste subtree contained in clipboard as last child of the current
		    node.  This command may fail if e.g. the subtree was copied from a
		    different kind of game.
		  </para>

		  <note>
		    <para>
		      It is currently impossible to determine if the clipboard contains
		      anything, therefore this menu item is sensitive even if there is no
		      subtree to paste.
		    </para>
		  </note>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Delete Node</guimenuitem></term>
		<listitem>
		  <para>
		    Delete the current node together with its children from the game
		    record.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guisubmenu>Tools</guisubmenu></term>
		<listitem>
		  <para>
		    Tools are very important as they are the most used (together with
		    comment editing) way of modifying game records.  Active tool can also
		    be changed using the editing toolbar of from keyboard.
		  </para>

		  <para>
		    <variablelist>
		      <varlistentry>
			<term><guimenuitem>Move Tool</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which is used to play new moves in the current
			    game record.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Setup Tool</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which is used to add and remove pieces from the
			    current node.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Cross Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds cross markup to the current position.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Circle Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds circle markup to the current
			    position.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Cross Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds cross markup to the current position.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Square Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds sqiare markup to the current
			    position.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Triangle Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds triangle markup to the current
			    position.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Selected Markup</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which adds selected markup to the current
			    position.
			  </para>

			  <note>
			    <para>
			      It is not recommended to use this type of markup, as it has
			      no standard appearance and may confuse other users.
			    </para>
			  </note>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Label Tool</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which places single letter and arbitrary text
			    labels on the board.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Number Tool</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which places number labels on the board.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Scoring Tool</guimenuitem></term>
			<listitem>
			  <para>
			    Activate tool which scores the current position.  This tool is
			    valid only for Go games.
			  </para>
			</listitem>
		      </varlistentry>
		    </variablelist>
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Add Empty Node</guimenuitem></term>
		<listitem>
		  <para>
		    Add an empty children to the current node.  Standard way of adding
		    children is by playing moves, but this command allows you to add node
		    without any move.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Move Branch Up</guimenuitem></term>
		<listitem>
		  <para>
		    Move current branch up i.e. swap it with the previous branch.  Useful
		    to rearrange branches in the game record.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Move Branch Down</guimenuitem></term>
		<listitem>
		  <para>
		    Move current branch down i.e. swap it with the next branch.  Useful to
		    rearrange branches in the game record.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Edit Node Name</guimenuitem></term>
		<listitem>
		  <para>
		    Edit the name of the current node.  If the node has no name, it is
		    inserted.  Otherwise, you can edit node just by directly modifying it
		    in the comment window and this command simply selects the name.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Set Move Number</guimenuitem></term>
		<listitem>
		  <para>
		    Set the number of the current move.  Normally, move number is
		    incremented by one after each move, but there are cases when this must
		    be overridden, for instance, if game record starts not at the game
		    beginning.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guisubmenu>Player to Move</guisubmenu></term>
		<listitem>
		  <para>
		    Sometimes it is needed to explicitly set who is to move next, for
		    instance, in a problem collection.
		  </para>

		  <para>
		    <variablelist>
		      <varlistentry>
			<term><guimenuitem>White</guimenuitem></term>
			<listitem>
			  <para>
			    Set player to move to White, regardless of what game rules
			    say.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>Black</guimenuitem></term>
			<listitem>
			  <para>
			    Set player to move to Black, regardless of what game rules
			    say.
			  </para>
			</listitem>
		      </varlistentry>

		      <varlistentry>
			<term><guimenuitem>By Game Rules</guimenuitem></term>
			<listitem>
			  <para>
			    Let game rules determine who is to move next (this is the
			    default.)
			  </para>
			</listitem>
		      </varlistentry>
		    </variablelist>
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Find</guimenuitem></term>
		<listitem>
		  <para>
		    Show the <link linkend="find-dialog">Find Dialog</link> to find a
		    string in node comments and/or names.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Find Next</guimenuitem></term>
		<listitem>
		  <para>
		    Repeat the last search in forward direction.  If there were no last
		    search, acts just as <guimenuitem>Find</guimenuitem> menu item.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Find Previous</guimenuitem></term>
		<listitem>
		  <para>
		    Repeat the last search in backward direction.  If there were no last
		    search, acts just as <guimenuitem>Find</guimenuitem> menu item.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Game Information</guimenuitem></term>
		<listitem>
		  <para>
		    Show the <link linkend="game-information-dialog">Game Information
		      Dialog</link> to view and/org edit game information.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Preferences</guimenuitem></term>
		<listitem>
		  <para>
		    Show the <link linkend="preferences">Preferences Dialog</link> to
		    change &app; settings.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>

	<section id="view-menu">
	  <title><guimenu>View</guimenu> menu</title>
	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>Main Toolbar</guimenuitem></term>
		<listitem>
		  <para>
		    Show or hide main toolbar in this window.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Editing Toolbar</guimenuitem></term>
		<listitem>
		  <para>
		    Show or hide editing toolbar in this window.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Navigation Toolbar</guimenuitem></term>
		<listitem>
		  <para>
		    Show or hide navigation toolbar in this window.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Game Action Buttons</guimenuitem></term>
		<listitem>
		  <para>
		    Show or hide Game Action Buttons (<guibutton>Pass</guibutton> for Go
		    game and <guibutton>Resign</guibutton>.)  They have quite rarely used
		    functionality and take precious space on the right.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Game Tree</guimenuitem></term>
		<listitem>
		  <para>
		    Show or hide <link linkend="game-tree-view">Game Tree View</link> in
		    this window.  Its visibility can also be globally changed in the
		    <link linkend="preferences-game-tree">preferences</link>.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Recenter on Current Node</guimenuitem></term>
		<listitem>
		  <para>
		    Recenter <link linkend="game-tree-view">Game Tree View</link> on the
		    current node.  Of course, the view should be shown to begin with.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Control Center</guimenuitem></term>
		<listitem>
		  <para>
		    Show <link linkend="when-start">&app; Control Center</link>.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>

	<section id="play-menu">
	  <title><guimenu>Play</guimenu> menu</title>
	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>Pass</guimenuitem></term>
		<listitem>
		  <para>
		    Play a pass move.  (Only valid in Go.)
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Resign</guimenuitem></term>
		<listitem>
		  <para>
		    Resign current game.  Opponent is declared a winner.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Adjourn Game</guimenuitem></term>
		<listitem>
		  <para>
		    Adjourn current game and save game record, so it can be later
		    <link linkend="resume-game">resumed</link>.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>

	<section id="go-menu">
	  <title><guimenu>Go</guimenu> menu</title>
	  <note>
	    <para>
	      This menu’s title is English verb <quote>go</quote>, not game name.
	    </para>
	  </note>

	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>Previous Node</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the previous node (current node’s parent.)
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Next Node</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the next node (current node’s child.)  By default, next node is
		    the first child, but it is remembered if you switch to a different
		    child.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Ten Nodes Backward</guimenuitem></term>
		<listitem>
		  <para>
		    Go ten nodes backward.  If there are less than ten nodes, stop at the
		    root of the game tree.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Ten Nodes Forward</guimenuitem></term>
		<listitem>
		  <para>
		    Go ten nodes forward.  If there are less than ten nodes, stop at the
		    branch end.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Root Node</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the game tree root.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Variation Last Node</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the last node in the current branch (variation.)
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Previous Variation</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the previous variation of the current node.  I.e. go to the
		    previous child of the parent of the current node.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Next Node</guimenuitem></term>
		<listitem>
		  <para>
		    Go to the next variation of the current node.  I.e. go to the next
		    child of the parent of the current node.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>Go to Named Node…</guimenuitem></term>
		<listitem>
		  <para>
		    Go to a named node given its name.  You can also use
		    <link linkend="find-dialog">Find Dialog</link> for this purpose, but
		    this way there is completion on node names.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>

	<section id="help-menu">
	  <title><guimenu>Help</guimenu> menu</title>
	  <para>
	    <variablelist>
	      <varlistentry>
		<term><guimenuitem>Contents</guimenuitem></term>
		<listitem>
		  <para>
		    Show this help.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><guimenuitem>About</guimenuitem></term>
		<listitem>
		  <para>
		    Show short information about &app; and its version.
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </para>
	</section>
      </section>
    </section>

    <section id="find-dialog">
      <title>Find Dialog</title>
      <para>
	Find Dialog allows you to search for text in node names and/or comments.  It is
	invaluable for large game records, especially those containing multiple branches,
	like debut/joseki dictionaries.
      </para>

      <para>
	When a node with matching text is found, <link linkend="board-windows">board
	  window</link> switches to it, if needed.  Matching text is selected in
	<link linkend="board-window-information-pane">information pane</link>.  Search can
	be repeated later without opening this dialog using <guimenu>Edit</guimenu> menu
	items or from keyboard.
      </para>

      <para>
	Dialog contains several controls:
      </para>

      <variablelist>
	<varlistentry>
	  <term><guilabel>Search for</guilabel> field</term>
	  <listitem>
	    <para>
	      Enter the text to search for here.  Field also has a history with up to 10
	      most recently found strings.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Optons</guilabel></term>
	  <listitem>
	    <para>
	      There a few options that control the search.  It can be case-sensitive or
	      case-insensitive.  It can be restricted to whole words or include any match.
	      Search can be wrapped around when the end or beginning of search domain is
	      reached, or stop there.
	    </para>

	    <para>
	      You can also select <guibutton>Auto-close this dialog</guibutton> button.
	      In this case, the dialog will be hidden after any successful search.  You
	      can repeat search afterwards using <guimenuitem>Find Next</guimenuitem>
	      and <guimenuitem>Find Previous</guimenuitem> items of
	      <guimenu>Edit</guimenu> menu or using <keycap>Ctrl+G</keycap> and
	      <keycap>Shift+Ctrl+G</keycap> key combinations.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Search scope</guilabel></term>
	  <listitem>
	    <para>
	      Search domain can include the whole game record tree or the current node
	      only.  The latter option is only interesting if current node’s comment is
	      very long.
	    </para>

	    <para>
	      Search can also be performed in node names, comments or both.  Typically,
	      you will want to search in both of them, but can sometimes wish to restrict
	      search to decrease number of matches you are not interested in.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Next</guibutton> and <guibutton>Previous</guibutton>
	    buttons</term>
	  <listitem>
	    <para>
	      When search parameters are entered, click one of this buttons, depending on
	      direction you wish search to be performed.  Buttons can be pressed
	      repeatedly to repeat search.  However, if <guibutton>Auto-close this
	      dialog</guibutton> option is selected, dialog will be closed on first
	      successful search.
	    </para>

	    <para>
	      These buttons can be disabled if a search in certain direction certainly
	      won’t hit any matches.  However, they are many cases when this cannot be
	      determined in advance (quickly), so activating one of these buttons is not
	      guaranteed to find anything.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Close</guibutton> button</term>
	  <listitem>
	    <para>
	      Close the dialog without performing any further search.  Use it when you’ve
	      finished searching or changed your mind.
	    </para>
	    </listitem>
	</varlistentry>
      </variablelist>
    </section>

    <section id="game-information-dialog">
      <title>Game Information Dialog</title>
      <para>
	The Game Information Dialog allows you to set values that describe game tree as a
	whole and are not specific to a particular move or position in the game.  It has a
	lot of fields which are splitted in three pages.  All fields are optional and can
	be empty (not set), but defining them gives additional description to the game.
      </para>

      <para>
	Fields on the first page (<guilabel>General</guilabel>) describe the game
	opponents, rules of the game and non-spoiling game details.  Field on the second
	page (<guilabel>Description &amp; Result</guilabel>) are generally spoiling and
	can even disclose game outcome.  The third page (<guilabel>Game Record</guilabel>)
	describe the record itself.
      </para>

      <variablelist>
	<varlistentry>
	  <term><guilabel>White Player</guilabel> and <guilabel>Black
	      Player</guilabel></term>
	  <listitem>
	    <para>
	      This group of fields allows you to describe the opponents in the game.
	      The <guilabel>Name</guilabel> fields should be obvious.
	      The <guilabel>Team</guilabel> fields are used when the game is a part of a
	      match between two teams, for instance national teams.  Usually, they are
	      left empty.  The <guilabel>Rank</guilabel> of the opponents can be entered
	      in the appropriate fields.  This is usually the rank as applies to the game
	      in question.  For instance, this can be the rank awarded by the federation
	      guiding the tournament or it can be the rank of an Internet server where the
	      game took place.
	    </para>

	    <para>
	      Values of these fields are also displayed in the
	      <link linkend="board-window-information-pane">right column of board
	      windows</link>.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Game Name</guilabel></term>
	  <listitem>
	    <para>
	      The name of the game.  This field can be empty if the game is not special
	      and doesn’t have a distinguished name.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Place</guilabel></term>
	  <listitem>
	    <para>
	      The place the game took place at.  This can be a geographical location or
	      the name of an Internet server.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Date</guilabel></term>
	  <listitem>
	    <para>
	      The date the game took place on.  It should be in the international format
	      of YYYY-MM-DD.  For instance 2006-07-23 means 23 July 2006.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Event</guilabel></term>
	  <listitem>
	    <para>
	      The event this game is part of.  For instance, this can be the name of a
	      tournament.  This field is often empty.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Round</guilabel></term>
	  <listitem>
	    <para>
	      The round this game is part of.  For instance <quote>1st round</quote> or
	      <quote>Semifinal</quote>.  This field is often empty, especially
	      if <guilabel>Event</guilabel> is.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Rule set</guilabel></term>
	  <listitem>
	    <para>
	      Descriptive name of the rules this game was played in accordance with.  For
	      instance, for Go this can be <quote>Japanese</quote>, <quote>Chinese</quote>
	      etc.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Handicap</guilabel></term>
	  <listitem>
	    <para>
	      For Go only: number of stones the black was allowed to place on his first
	      move.  This field is either 0 or not set for the games with no handicap.
	    </para>

	    <note>
	      <para>
		Value of this field is only informational.  It doesn’t imply any
		particular setting of the black stones.
	      </para>
	    </note>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Komi</guilabel></term>
	  <listitem>
	    <para>
	      For Go only: the compensation, in points, the white receives for having the
	      second turn.  Can be negative or not set.  However, it should always be set
	      for games with non-zero komi, as otherwise proper scoring is impossible.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Main time</guilabel></term>
	  <listitem>
	    <para>
	      Main time each player has.  Should not be set if the game is played with no
	      time limit.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Overtime</guilabel></term>
	  <listitem>
	    <para>
	      Description of the overtime rules used for this game.  For
	      instance, <quote>25/600 Canadian</quote> means Canadian overtime with 10
	      minutes (600 seconds) for every 25 moves.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Game result</guilabel></term>
	  <listitem>
	    <para>
	      The result of the game in SGF format.

	      <table frame="none">
		<title>Valid <guilabel>Game result</guilabel> values</title>
		<tgroup cols="2">
		  <thead>
		    <row>
		      <entry>Value</entry>
		      <entry>Meaning</entry>
		    </row>
		  </thead>

		  <tbody>
		    <row>
		      <entry>Void</entry>
		      <entry>
			There is no result yet (the game is not finished) or there can be
			no result at all (e.g. for problems.)
		      </entry>
		    </row>

		    <row>
		      <entry>0 <emphasis>or</emphasis> Draw</entry>
		      <entry>
			The game is draw, i.e. is finished, but there’s no winner.
		      </entry>
		    </row>

		    <row>
		      <entry>
			W+<userinput>score</userinput>
			<emphasis>or</emphasis> B+<userinput>score</userinput>
		      </entry>
		      <entry>
			A player has won by the specified score.  For
			instance, <quote>W+6.5</quote> means that white has won by 6.5
			points.
		      </entry>
		    </row>

		    <row>
		      <entry>W+ <emphasis>or</emphasis> B+</entry>
		      <entry>
			A player has won.  Used mainly for the games without a notion for
			score, e.g. Amazons.
		      </entry>
		    </row>

		    <row>
		      <entry>
			W+Resign <emphasis>or</emphasis> B+Resign
			<emphasis>or</emphasis> W+R <emphasis>or</emphasis> B+R
		      </entry>
		      <entry>
			A player has won by resignation.
		      </entry>
		    </row>

		    <row>
		      <entry>
			W+Time <emphasis>or</emphasis> B+Time
			<emphasis>or</emphasis> W+T <emphasis>or</emphasis> B+T
		      </entry>
		      <entry>
			A player has won on time.  I.e. his opponent exceeded his time
			limit.
		      </entry>
		    </row>

		    <row>
		      <entry>
			W+Forfeit <emphasis>or</emphasis> B+Forfeit
			<emphasis>or</emphasis> W+F <emphasis>or</emphasis> B+F
		      </entry>
		      <entry>
			A player has won by forfeit, e.g. his opponent made an illegal
			move.
		      </entry>
		    </row>

		    <row>
		      <entry>?</entry>
		      <entry>
			Game result is unknown.
		      </entry>
		    </row>
		  </tbody>
		</tgroup>
	      </table>
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Opening played</guilabel></term>
	  <listitem>
	    <para>
	      Description of the opening played in the game.  This field is often empty.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Comment / description</guilabel></term>
	  <listitem>
	    <para>
	      Description for the entire game.  It can be some background information
	      and/or the summary of the game.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Copyright string</guilabel></term>
	  <listitem>
	    <para>
	      Short copyright information for the game record.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Annotator</guilabel></term>
	  <listitem>
	    <para>
	      The name of the person who provided comments (annotation) for the game.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Source</guilabel></term>
	  <listitem>
	    <para>
	      The source of the game record (book, journal etc.)  Often is empty if the
	      game record was in electronic form to begin with.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Entered by</guilabel></term>
	  <listitem>
	    <para>
	      Name of the person who entered the game record.  Usually empty for
	      automatically created records.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </chapter>

  <chapter id="preferences">
    <title>Settings</title>
    <para>
      To configure &app; either click the <guibutton>Preferences</guibutton> button in the
      <link linkend="when-start">Control Center window</link> or choose
      <menuchoice>
	<guimenu>Edit</guimenu>
	<guimenuitem>Preferences</guimenuitem>
      </menuchoice>
      menu item.
    </para>

    <para>
      The Preferences dialog is displayed.  It consists of the following categories:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  General

	  <itemizedlist>
	    <listitem>
	      <para><link linkend="preferences-gtk-ui">Interface</link></para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>

      <listitem>
	<para>
	  Editing &amp; Viewing

	  <itemizedlist>
	    <listitem>
	      <para><link linkend="preferences-game-tree">Game Tree</link></para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>

      <listitem>
	<para>
	  GTP

	  <itemizedlist>
	    <listitem>
	      <para><link linkend="preferences-gtp-engines">GTP Engines</link></para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>

      <listitem>
	<para>
	  Game Records (SGF)

	  <itemizedlist>
	    <listitem>
	      <para><link linkend="preferences-saving-game-records">Saving</link></para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>

      <listitem>
	<para>
	  Board Appearance

	  <itemizedlist>
	    <listitem>
	      <para><link linkend="preferences-go-board-appearance">Go Board
		  Appearance</link></para>
	    </listitem>

	    <listitem>
	      <para><link linkend="preferences-amazons-board-appearance">Amazons Board
		  Appearance</link></para>
	    </listitem>

	    <listitem>
	      <para><link linkend="preferences-reversi-board-appearance">Reversi Board
		  Appearance</link></para>
	    </listitem>
	  </itemizedlist>
	</para>
      </listitem>
    </itemizedlist>

    <section id="preferences-gtk-ui">
      <title>General Interface</title>
      <para>
	General interface of &app; can be configured at this page.  It is not really
	related to the functionality of the application.
      </para>

      <variablelist>
	<varlistentry>
	  <term><guilabel>File Chooser Dialog Style</guilabel></term>
	  <listitem>
	    <para>
	      You can use either the new file chooser or the old one, which was the
	      default on pre-2.4 GTK+.
	    </para>

	    <note>
	      <para>
		This option will be removed in &app; ver. 0.3.  It was added when the new
		file chooser was in early development stages and had significant usability
		problems.  Nowadays it has little sense to keep supporting the old one.
	      </para>
	    </note>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Toolbar Styles</guilabel></term>
	  <listitem>
	    <para>
	      By default, &app; uses desktop settings for all its toolbars.  However, you
	      can choose specific style for each of three toolbar kinds.  You can also
	      return toolbars to using desktop defaults here.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>

    <section id="preferences-game-tree">
      <title>Game Tree</title>
      <para>
	Here you can customize appearance and behavior of the
	<link linkend="game-tree-view">Game Tree View</link>.
      </para>

      <variablelist>
	<varlistentry>
	  <term><guilabel>Show Game Tree</guilabel></term>
	  <listitem>
	    <para>
	      You can choose whether the Game Tree View is shown in
	      <link linkend="board-windows">Board Windows</link> by default.  If you
	      choose <guilabel>Automatically</guilabel> option, it will be shown if game
	      record has anything in addition to the main branch.  In any case, you can
	      show or hide the view manually, using
	      <menuchoice>
		<guimenu>View</guimenu>
		<guimenuitem>Game Tree</guimenuitem>
	      </menuchoice> menu item.  In this case, automatic showing will be disabled,
	      even if corresponding option is selected.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Track Tree’s Current Node</guilabel></term>
	  <listitem>
	    <para>
	      You can choose whether the view should track the current node,
	      i.e. reposition itself to show it.  In automatic mode it only tracks the
	      current node if it was showing it before.  This mode prevents the view from
	      scrolling if you intentionally scrolled it to some part of the tree not
	      containing the current node.  You can always force the view to display the
	      current node by using
	      <menuchoice>
		<guimenu>View</guimenu>
		<guimenuitem>Recenter on Current Node</guimenuitem>
	      </menuchoice> menu item.
	    </para>

	    <para>
	      You can also choose whether the view will scroll minimal possible distance
	      while tracking (i.e. the current node will be somewhere near an edge), or if
	      it will always recenter on the current node if needed.  These options don’t
	      make sense if tracking is disabled, so they are disabled then too.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guilabel>Show tooltips</guilabel></term>
	  <listitem>
	    <para>
	      Choose whether Game Tree View should show tooltips over nodes.
	      See <link linkend="game-tree-view">view description</link> for details.  You
	      may want to disable tooltips if they look too distracting.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>

    <section id="preferences-gtp-engines">
      <title>GTP Engines</title>
      <para>
	At this page, all game-playing programs registered in &app; are shown.  You can
	register new programs and modify information in existing entries.
      </para>

      <para>
	All registered programs are shown in the list labeled
	<guilabel>List of GTP engines</guilabel>.  When you select one of them, some
	information about it is shown in the lower part of the dialog.  This inlcudes
	program <guilabel>name</guilabel>, <guilabel>version</guilabel>,
	<guilabel>supported game(s)</guilabel> and <guilabel>command line</guilabel>.  The
	command line is exactly what you specified while registering the program, while
	the rest of information is reported by the program itself.
      </para>

      <para>
	Programs from the list are also shown in the
	<link linkend="new-game-dialog">New Game</link> and
	<link linkend="resuming-game-dialog">Resuming Game</link> dialogs as available
	computer opponents.  However, you can hide some of them by removing the mark
	beside the program name in the <guilabel>Show</guilabel> column.  This may be
	better than removing a program record altogether in case you later regain your
	interest in it.  Also, some GTP engines may be listed in &app; system-wide
	settings; those cannot be removed, only hidden.
      </para>

      <para>
	There are also five buttons on this page:
      </para>

      <variablelist>
	<varlistentry>
	  <term><guibutton>Add</guibutton> and <guibutton>Modify</guibutton>
	    buttons</term>
	  <listitem>
	    <para>
	      These two buttons allow you to register another program, or modify
	      information about an already registered one, correspondingly.  They both pop
	      up the
	      <link linkend="preferences-gtp-engine-information-dialog">GTP Engine
		Information dialog</link>.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Remove</guibutton> button</term>
	  <listitem>
	    <para>
	      This button removes a game-playing program from the list of registered
	      programs.  The unregistered program will not appear in the
	      <link linkend="new-game-dialog">New Game dialog</link> as an available
	      opponent.  Of course, the program itself is not touched and you can
	      re-register it in &app; later.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><guibutton>Move Up</guibutton> and <guibutton>Move Down</guibutton>
	    buttons</term>
	  <listitem>
	    <para>
	      Using these two buttons you can rearrange registered programs.  Computer
	      opponents in the New Game dialog are listed in exactly the same order as on
	      this page, so you may want to place more frequently used programs on the
	      top.  Another way to reorder GTP programs is to drag-and-drop their names in
	      the list.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>

      <section id="preferences-gtp-engine-information-dialog">
	<title>GTP Engine Information Dialog</title>
	<para>
	  This dialog is shown whenever you want to register a game-playing program in
	  &app; or modify information about an already registered one.  Depending on the
	  situation, it can be titled either <guilabel>New GTP Engine</guilabel> or
	  <guilabel>Modify GTP Engine Information</guilabel>.  After you fill in the
	  dialog, press the <guibutton>Add</guibutton> or <guibutton>OK</guibutton>
	  button.  &app; will launch the program to check if it works and ask it for some
	  information.
	</para>

	<note id="preferences-gtp-engine-information-dialog-freeze">
	  <para>
	    If the message
	    <quote>Querying engine’s name, version and known commands…</quote> appears and
	    persists for too long (more than a few seconds), this most likely indicates
	    that the command line you specify starts the program in non-GTP mode or starts
	    a wrong program to begin with.  If you don’t expect the program to be very
	    slow on initialization, then click the <guibutton>Cancel</guibutton> button
	    and fix the command line.
	  </para>
	</note>

	<para>
	  The dialog has two text entry fields:
	</para>

	<variablelist>
	  <varlistentry>
	    <term><guilabel>Command line</guilabel></term>
	    <listitem>
	      <para>
		The command line to start the program should be entered here.  You can use
		the <guibutton>Browse</guibutton> button to select the program, but
		normally just specifying program filename is enough.  (More exactly, it is
		enough if the program is installed in a directory that is in your
		<envar>$PATH</envar> environment variable.)  In any case, you should enter
		program-specific options after its filename.  To find out which options
		should be used, see the manual of the program in question.
	      </para>

	      <para>
		For
		<ulink type="http" url="http://www.gnugo.org/gnugo.html"><application>GNU
		Go</application></ulink>, the command line should look like this (note the
		double hyphens):
	      </para>

	      <para>
		<command>gnugo --mode gtp --quiet</command>
	      </para>

	      <para>
		You may also want to specify additional options.  See <application>GNU
		Go</application> documentation for more information.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term><guilabel>Screen name</guilabel></term>
	    <listitem>
	      <para>
		In this field you can specify the way &app; will display the name of the
		program.  You can enter the full name or use special symbols
		<quote>%n</quote> and <quote>%v</quote>.  They will be replaced with the
		name and version of the program as it reports them itself.  In most cases
		the default value of <quote>%n %v</quote> is what you want, but sometimes
		it makes sense to alter it.  For instance, you can specify
		<quote>%n %v level 5</quote> here if you fixed program’s level in the
		command line.  If, for some reason, you need the percent sign in the name,
		type it in as <quote>%%</quote> (the percent sign is used as
		<firstterm>escape symbol</firstterm> in this field.)
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </section>
    </section>

    <section id="preferences-saving-game-records">
      <title>Saving Game Records</title>
      <para>
	Currently, you can only specify whether to save game records in UTF-8 or to
	preserve original encoding.  The former option is recommended because UTF-8 can
	encode any character and because Quarry loads UTF-8 encoded game records faster
	than with any other encoding.  However, you may want to preserve original encoding
	if, for instance, you use other SGF editor/viewer with poor support for UTF-8 or
	this is required for some reason for distribution.
      </para>
    </section>

    <section id="preferences-go-board-appearance">
      <title>Go Board Appearance</title>
      <para>
	Sorry, not documented yet… <!-- FIXME -->
      </para>
    </section>

    <section id="preferences-amazons-board-appearance">
      <title>Amazons Board Appearance</title>
      <para>
	Sorry, not documented yet… <!-- FIXME -->
      </para>
    </section>

    <section id="preferences-reversi-board-appearance">
      <title>Reversi Board Appearance</title>
      <para>
	Sorry, not documented yet… <!-- FIXME -->
      </para>
    </section>
  </chapter>

  &AUTHORS;
  &FDL;
</book>

<!--
    Local Variables:
    tab-width: 8
    sgml-basic-offset: 2
    fill-column: 90
    End:
  -->
