# Makefile.in generated by automake 1.7 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Process this file with Automake to produce `Makefile.in'.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
QUARRY_GTK_CFLAGS = @QUARRY_GTK_CFLAGS@
QUARRY_GTK_DEPRECATED_FLAGS = @QUARRY_GTK_DEPRECATED_FLAGS@
QUARRY_GTK_LIBS = @QUARRY_GTK_LIBS@
QUARRY_WARNINGS = @QUARRY_WARNINGS@
QUARRY_WARNINGS_GTK = @QUARRY_WARNINGS_GTK@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

QUARRY_FULL_GTK_CFLAGS = \
	$(QUARRY_GTK_CFLAGS)		\
	$(QUARRY_GTK_DEPRECATED_FLAGS)


I_CPPFLAGS = \
	-I $(top_srcdir)/src		\
	-I $(top_srcdir)/src/board	\
	-I $(top_srcdir)/src/gtp	\
	-I $(top_srcdir)/src/gui-utils	\
	-I $(top_srcdir)/src/sgf	\
	-I $(top_srcdir)/src/utils


AM_CPPFLAGS = \
	-D PACKAGE_DATA_DIR=\""$(datadir)/quarry"\"			\
	-D PACKAGE_TEXTURES_DIR=\""$(datadir)/quarry/textures"\"	\
									\
	$(QUARRY_WARNINGS_GTK)						\
									\
	$(I_CPPFLAGS)							\
									\
	$(QUARRY_FULL_GTK_CFLAGS)


noinst_LIBRARIES = libguigtk.a

BUILT_SOURCES = \
	gtk-configuration.c	\
	quarry-marshal.c	\
				\
	gtk-configuration.h	\
	quarry-marshal.h


PARSE_CONFIGURATION = \
	$(top_srcdir)/src/gui-utils/parse-configuration$(EXEEXT)


libguigtk_a_SOURCES = \
	gtk-assistant.c			\
	gtk-configuration-structures.c	\
	gtk-control-center.c		\
	gtk-games.c			\
	gtk-goban.c			\
	gtk-goban-window.c		\
	gtk-gtp-client-interface.c	\
	gtk-named-vbox.c		\
	gtk-new-game-dialog.c		\
	gtk-parser-interface.c		\
	gtk-preferences.c		\
	gtk-progress-dialog.c		\
	gtk-qbox.c			\
	gtk-qhbox.c			\
	gtk-qvbox.c			\
	gtk-utils.c			\
	gui-back-end.c			\
	quarry-stock.c			\
					\
	gtk-assistant.h			\
	gtk-configuration-structures.h	\
	gtk-control-center.h		\
	gtk-games.h			\
	gtk-goban.h			\
	gtk-goban-window.h		\
	gtk-gtp-client-interface.h	\
	gtk-named-vbox.h		\
	gtk-new-game-dialog.h		\
	gtk-parser-interface.h		\
	gtk-preferences.h		\
	gtk-progress-dialog.h		\
	gtk-qbox.h			\
	gtk-qhbox.h			\
	gtk-qvbox.h			\
	gtk-tile-set-interface.h	\
	gtk-thread-interface.h		\
	gtk-utils.h			\
	gui-back-end.h			\
	quarry-stock.h


nodist_libguigtk_a_SOURCES = $(BUILT_SOURCES)

# This seems to be the best way of solving circular references.
libguigtk_a_LIBADD = $(top_srcdir)/src/gui-utils/libguiutils.a

EXTRA_DIST = \
	gtk-configuration.list	\
	quarry-marshal.list


DISTCLEANFILES = *~

MOSTLYCLEANFILES = $(BUILT_SOURCES)
subdir = src/gui-gtk
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libguigtk_a_AR = $(AR) cru
libguigtk_a_DEPENDENCIES = $(top_srcdir)/src/gui-utils/libguiutils.a
am_libguigtk_a_OBJECTS = gtk-assistant.$(OBJEXT) \
	gtk-configuration-structures.$(OBJEXT) \
	gtk-control-center.$(OBJEXT) gtk-games.$(OBJEXT) \
	gtk-goban.$(OBJEXT) gtk-goban-window.$(OBJEXT) \
	gtk-gtp-client-interface.$(OBJEXT) gtk-named-vbox.$(OBJEXT) \
	gtk-new-game-dialog.$(OBJEXT) gtk-parser-interface.$(OBJEXT) \
	gtk-preferences.$(OBJEXT) gtk-progress-dialog.$(OBJEXT) \
	gtk-qbox.$(OBJEXT) gtk-qhbox.$(OBJEXT) gtk-qvbox.$(OBJEXT) \
	gtk-utils.$(OBJEXT) gui-back-end.$(OBJEXT) \
	quarry-stock.$(OBJEXT)
am__objects_1 = gtk-configuration.$(OBJEXT) quarry-marshal.$(OBJEXT)
nodist_libguigtk_a_OBJECTS = $(am__objects_1)
libguigtk_a_OBJECTS = $(am_libguigtk_a_OBJECTS) \
	$(nodist_libguigtk_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/gtk-assistant.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-configuration-structures.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-configuration.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-control-center.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-games.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-goban-window.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-goban.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-gtp-client-interface.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-named-vbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-new-game-dialog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-parser-interface.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-preferences.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-progress-dialog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-qbox.Po ./$(DEPDIR)/gtk-qhbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gtk-qvbox.Po ./$(DEPDIR)/gtk-utils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gui-back-end.Po \
@AMDEP_TRUE@	./$(DEPDIR)/quarry-marshal.Po \
@AMDEP_TRUE@	./$(DEPDIR)/quarry-stock.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libguigtk_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libguigtk_a_SOURCES) $(nodist_libguigtk_a_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gui-gtk/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libguigtk.a: $(libguigtk_a_OBJECTS) $(libguigtk_a_DEPENDENCIES) 
	-rm -f libguigtk.a
	$(libguigtk_a_AR) libguigtk.a $(libguigtk_a_OBJECTS) $(libguigtk_a_LIBADD)
	$(RANLIB) libguigtk.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-assistant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-configuration-structures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-control-center.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-games.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-goban-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-goban.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-gtp-client-interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-named-vbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-new-game-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-parser-interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-preferences.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-progress-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-qbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-qhbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-qvbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtk-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gui-back-end.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quarry-marshal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quarry-stock.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`; \
@am__fastdepCC_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


quarry-marshal.c : quarry-marshal.list
	@GLIB_GENMARSHAL@ quarry-marshal.list --stdinc	\
			  --prefix=quarry_marshal	\
			  --body >> quarry-marshal.c	\
	  || (rm -f quarry-marshal.c ; exit 1)

quarry-marshal.h : quarry-marshal.list
	@GLIB_GENMARSHAL@ quarry-marshal.list --stdinc	\
			  --prefix=quarry_marshal	\
			  --header > quarry-marshal.h	\
	  || (rm -f quarry-marshal.h ; exit 1)

# FIXME: find a nicer way to avoid warnings in `quarry-marshal.c'
#	 (missing prototypes are easy; the trick is to cope with
#	 unused parameters).
quarry-marshal.$(OBJEXT) : quarry-marshal.c quarry-marshal.h
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES)	\
	      $(QUARRY_FULL_GTK_CFLAGS)			\
	      $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)	\
	      -o quarry-marshal.$(OBJEXT)		\
	      -c quarry-marshal.c			\
	  || (rm -f quarry-marshal.$(OBJEXT) ; exit 1)

gtk-configuration.c gtk-configuration.h					\
  : gtk-configuration.list						\
    $(top_srcdir)/src/gui-utils/common-configuration-sections.list	\
    $(top_srcdir)/src/gui-utils/common-configuration-values.list	\
    $(top_srcdir)/src/gui-utils/common-configuration-defaults.list	\
    $(PARSE_CONFIGURATION)
	$(PARSE_CONFIGURATION) gtk-configuration.list			\
			       gtk-configuration.h gtk-configuration.c	\
	  || (rm -f gtk-configuration.c gtk-configuration.h ; exit 1)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
