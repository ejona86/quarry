2004-04-28  Paul Pogonyshev  <pogonyshev@gmx.net>

	* utils/utils.h (string_list_is_empty)
	(string_list_is_single_string): Don't cast to `const StringList *'
	to avoid GCC 3.3+ warnings.
	* gui-utils/configuration.c (write_section): Cast to `const
	StringList *' to cope with the above change.

	* gui-gtk/gtk-goban-window.c: Add full support for free handicap.
	(GTP_ENGINE_CAN_PLAY_MOVES): New macro.
	(gtk_goban_window_init): Create "special mode" control set.
	(gtk_goban_window_enter_game_mode): Enter free handicap special
	mode if user is to set up free handicap.
	(enter_special_mode, leave_special_mode)
	(free_handicap_mode_done)
	(set_goban_signal_handlers, free_handicap_mode_pointer_moved)
	(free_handicap_mode_goban_clicked)
	(free_handicap_has_been_placed): New functions.
	(navigate_goban): Rename from playing_mode_navigate_goban().
	Navigation should always work the same way or just be disabled.
	(initialize_gtp_player): Rewrite: make reentrant and more generic.
	(gtp_player_initialized_for_game): Remove (essentially include in
	the above function).
	(move_has_been_played): Rewrite.  Remove `color' parameter again.
	Generate moves even if opponent is not initialized.
	* gui-gtk/quarry-stock.c: New stock item `QUARRY_STOCK_DONE'.
	* gui-gtk/gtk-new-game-dialog.c (gtk_new_game_dialog_present):
	Don't desensitize free handicap controls: unneeded now.

	* gui-gtk/gtk-goban.h: New feedback types
	`GOBAN_FEEDBACK_ADD_BLACK_OR_REMOVE' and
	`GOBAN_FEEDBACK_ADD_WHITE_OR_REMOVE'.  Remove `_DEFAULT' from
	`GOBAN_FEEDBACK_MOVE' and its color variants.
	* gui-gtk/gtk-goban.c (gtk_goban_set_grid_contents)
	(gtk_goban_get_grid_contents, gtk_goban_diff_against_grid): New
	functions.
	(set_overlay_data): Allow setting overlay tile to `TILE_NONE'.
	(set_feedback_data): Handle new feedback types.  Cope with the
	above change.

	* gui-gtk/gtk-utils.h: Define gtk_entry_set_alignment() to nothing
	unless GTK+ version is 2.4 or higher.
	(G_MAXUINT8, G_MAXUINT16): Define if not yet defined by GLib
	headers.

	* gtp/gtp-client.c (gtp_client_place_free_handicap)
	(parse_free_handicap_placement, gtp_client_set_free_handicap): New
	functions.
	* board/board.c (game_format_position_list)
	(game_parse_position_list): New functions.

	* sgf/sgf-utils.c (sgf_utils_add_free_handicap_stones): New
	function.
	(determine_final_color_to_play): If there is positive handicap,
	set `sgf_color_to_play' to `WHITE' only if handicap stones are
	present in the same node.

2004-04-27  Paul Pogonyshev  <pogonyshev@gmx.net>

	* utils/memory-pool.c (memory_pool_free): Fix bug: do free the
	very last item in the pool if asked.  Fix typo: when profiling,
	increment the number of freed items, not of allocated ones.

	* sgf/sgf-diff-utils.c (generate_sgf_collection_diff)
	(generate_sgf_node_layer_diff): Initialize some variables to
	silence GCC warnings.
	* gui-utils/configuration.c (configuration_read_from_file):
	Likewise.
	* gui-gtk/gtk-utils.c (gtk_utils_create_titled_page): Likewise.

	* gui-gtk/gtk-color-button.c: Various backports to GTK+ pre-2.4
	and for compilation in Quarry source tree.  See file for details.

	* gui-gtk/quarry-marshal.list: New marshaller `VOID:VOID'.
	* gui-gtk/Makefile.am: Fix typo in `quarry-marshal.c' build rule:
	">", not ">>".

2004-04-26  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-color-button.c, gui-gtk/gtk-color-button.h: New
	files, copy from GTK+ version 2.4.0.  Rename to follow Quarry
	filename standard.  Modify to avoid compilation if GTK+ 2.4 is
	present anyway.

	* gui-gtk/gtk-preferences.c (create_board_appearance_page):
	Implement.  Add controls for all implemented board appearance
	configuration variables.
	(update_board_background, update_board_background_texture)
	(update_board_foreground): New functions.

	* gui-gtk/gtk-goban.c: Keep track of all goban widgets.
	(gtk_goban_update_appearance): New function.

	* utils/utils.h (QUARRY_COLORS_ARE_EQUAL): New macro.

	* gui-utils/common-configuration-defaults.list: Use value
	substitution for default texture file paths.
	* gui-gtk/Makefile.am: Pass `PACKAGE_TEXTURES_DIR' variable to
	`parse-configuration' utility.

	* gui-utils/parse-configuration.c (configuration_parse_defaults2):
	Read defaults of type `string' with parse_multiline_string() so
	that value substitution makes sense.

	* utils/parse-list.c: Add new `substitute_value' command support.
	Add command-line options support.
	(parse_list_main): Print help/usage messages to `stdout' or
	`stderr' according to GNU standards.
	(print_usage): New function.

	* utils/utils.h (AssociationList): New global string list type.
	* utils/string-list.c (association_list_item_dispose)
	(association_list_find_association): New functions.

	* utils/getopt.c, utils/getopt1.c, utils/getopt.h: New files, copy
	from GNU C Library version 2.3.2.

2004-04-25  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-goban.c: Use style modifiers instead of new style
	for changing widget appearance.
	(set_goban_appearance_style): New function.
	* gui-gtk/gtk-utils.c (gtk_utils_set_gdk_color)
	(gtk_utils_set_quarry_color): New functions.

	* gui-utils/parse-configuration.c (configuration_parse_sections2):
	Bug-fix: don't try to define new structure several times.

	* gui-utils/common-configuration-sections.list: Add configuration
	data for board appearance for Go, Amazons and Othello games.
	* gui-utils/common-configuration-values.list: Likewise.
	* gui-utils/common-configuration-defaults.list: Likewise.

	* gui-utils/configuration.c (configuration_read_from_file): Only
	consider first word of value when parsing values of non-string
	configuration variables.

	* gui-utils/parse-configuration.c: Add support for `color'
	configuration value type.
	* gui-utils/configuration.c: Likewise.

	* utils/utils.h (QuarryColor): New structure.
	* utils/parse-list.c (parse_color): New function.
	* gui-utils/configuration-internals.h: Include `utils.h' for the
	`QuarryColor' structure.

2004-04-24  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-utils/configuration.c (configuration_read_from_file): Close
	configuration file.

2004-04-23  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-configuration.list: Add configuration variables for
	game rules to "New Game Parameters" section.
	* gui-gtk/gtk-new-game-dialog.c (gtk_new_game_dialog_present): Use
	new configuration variables for initialization.
	(begin_game): Set them when beginning new game.

	* gui-utils/parse-configuration.c: Add support for configuration
	variables of type `real'.
	* gui-utils/configuration.c: Likewise.
	* gui-utils/configuration.c: Complete support for configuration
	variables of type `int' (reading from file).

	* gui-gtk/gtk-goban-window.c (initialize_gtp_player): Add support
	for fixed handicap and komi.
	* gtp/gtp-client.c (gtp_client_set_fixed_handicap)
	(gtp_client_set_komi): New functions.

	* sgf/sgf-tree.c (sgf_node_get_komi): New function.

	* gui-gtk/gtk-new-game-dialog.c: Implement game rules (partially).
	(show_game_specific_rules, set_handicap_adjustment_limits): New
	functions.
	
	* sgf/sgf-utils.c (sgf_utils_set_handicap): New function.
	* board/go.c (go_get_max_fixed_handicap)
	(go_get_fixed_handicap_stones): New functions.

	* gui-gtk/gtk-utils.c (gtk_utils_create_spin_button): New
	function.

2004-04-22  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-games.h (GTK_MIN_BOARD_SIZE, GTK_MAX_BOARD_SIZE):
	New macros.

	* quarry.h (MIN, MAX, ROUND_DOWN): New macros.  Use `#undef' to
	avoid conflicts with GLib or whatever else.

	* gui-gtk/gtk-utils.c (gtk_utils_create_titled_page): Don't use
	gtk_widget_show_all() on page contents (too intrusive).
	(gtk_utils_create_titled_page): Use gtk_utils_pack_in_box().
	* gui-gtk/gtk-assistant.c (gtk_assistant_add_page): Show added
	pages.

2004-04-21  Paul Pogonyshev  <pogonyshev@gmx.net>

	* sgf/sgf-diff-utils.c: New file with various functions for
	comparing SGF game trees and their collections.
	* sgf/sgf-diff.c: New file with standalone `sgf-diff' utility
	code (very simplistic at present).

	* sgf/sgf-writer.c (sgf_write_file): Add empty line between SGF
	game trees.

	* sgf/sgf-tree.c (sgf_node_delete): Rewrite to reduce stack usage
	when branching factor is high (follow algorithm of
	parse_node_tree() and parse_node_sequence() from `sgf-parser.c').
	(sgf_node_count_subtree_nodes): Likewise (had different problem).
	(sgf_node_count_subtree_nodes): Rename from
	sgf_node_count_sub_tree_nodes().

	* sgf/sgf-tree.c (sgf_game_tree_duplicate)
	(sgf_game_tree_duplicate_with_nodes)
	(sgf_node_duplicate, sgf_node_duplicate_recursively)
	(sgf_node_duplicate_to_given_depth, sgf_property_duplicate): New
	functions.
	(sgf_label_list_duplicate): New function.

	* board/board.h (board_position_list_duplicate): New macro.
	* sgf/sgf.h (sgf_position_list_duplicate): New macro.

2004-04-20  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-goban-window.c (move_has_been_played): Fix crashes
	when `color_to_play' is EMPTY (happens in Othello games) by
	getting explicit `color' argument from the caller.

2004-04-18  Paul Pogonyshev  <pogonyshev@gmx.net>

	* sgf/sgf-parser.c (parse_buffer): Fix bug that prevented correct
	parsing of files with multiple SGF game trees.

2004-04-17  Paul Pogonyshev  <pogonyshev@gmx.net>

	* board/board.c (board_position_lists_are_equal): Rename from
	board_position_list_equal().
	* sgf/sgf.h (sgf_position_lists_are_equal): Likewise.

2004-04-16  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-goban-window.c
	(USER_CAN_PLAY_MOVES): New macro.
	(gtk_goban_window_init): New sub-menu "Play" with "Pass" item.
	(play_pass_move): New function.
	(update_children_for_new_node): Sensitize/desensitize "Pass" menu
	item depending on the current game and who is to play.

2004-04-15  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-gtk/gtk-utils.c (gtk_utils_create_message_dialog): Comment
	gtk_window_set_skip_taskbar_hint() call out because it prevents
	KDE window manager from giving message dialogs focus.  Also make
	dialog modal even it has no parent (unless flags tell otherwise).

	* gui-gtk/gtk-goban-window.c (gtk_goban_window_save): Use
	gtk_utils_add_file_selection_response_handlers().
	* gui-gtk/gtk-parser-interface.c (gtk_parser_interface_present):
	Likewise.
	* gui-gtk/gtk-preferences.c (browse_for_gtp_engine): Likewise.

	* gui-gtk/gtk-utils.c
	(gtk_utils_add_file_selection_response_handlers)
	(overwrite_confirmation, file_selection_response): New functions.
	Ask user if she really wants to overwrite existing file.
	(gtk_utils_create_message_dialog): Remove `response_callback'
	argument.  Add `GTK_UTILS_DESTROY_ON_RESPONSE' flag to acomplish
	similar goal.
	* gui-gtk/quarry-stock.c: New stock item `QUARRY_STOCK_OVERWRITE'.

2004-04-14  Paul Pogonyshev  <pogonyshev@gmx.net>

	* gui-utils/tile-set.c (tile_set_dump_recycle): Bug-fix: don't
	deadlock when performing "lazy" recycling.

	* gui-gtk/gtk-utils.c (gtk_utils_set_menu_items_sensitive): New
	function.

	* gui-gtk/gtk-goban-window.c: Remove `navigate_goban' signal.
	(gtk_goban_window_init): Add "Go" (as verb) sub-menu.  Replace
	`navigate_goban' signal with generated `GtkAccelGroup' bindings.
	(update_children_for_new_node): Set items of "Go" sub-menu
	sensitive or insensitive depending on the node.

	* gui-gtk/gtk-goban.c (gtk_goban_class_init): Initialize
	`navigate' class member, even if GLib does that itself.
	* gui-gtk/gtk-preferences.c (engine_selector_destroyed): Free
	selector data, don't leak memory.

	* board/amazons.c (amazons_is_legal_move): Bug-fix: make function
	work properly when "to" point is a null point.

2004-04-13  Paul Pogonyshev  <pogonyshev@gmx.net>

	* sgf/sgf-writer.c (do_write_point_or_rectangle): Fix typo ('['
	instead of ']') that caused severe SGF file corruptions.

	* gui-gtk/gtk-goban-window.c: Add basic support for SGF file
	saving.  Note: quite dangerous now, because it never checks or
	asks anything, just writes.
	(gtk_goban_window_save)
	(save_file_as_response, save_file_as_destroy): New functions.

	* gui-gtk/gtk-goban-window.c (gtk_goban_window_init): Add menu bar
	to window (with just few items for now).

	* gui-gtk/Makefile.am: Remove custom build rules for
	`quarry-stock.o', because `QUARRY_WARNINGS_GTK' does not contain
	`-Wwrite-strings' (which is problematic for this file) anymore.


Changes before the project registration on Gna! (2004-04-12) were not logged.


  Copyright (C) 2004 Paul Pogonyshev.

  Copying and distribution of this file, with or without modification,
  are permitted provided the copyright notice and this notice are preserved.
